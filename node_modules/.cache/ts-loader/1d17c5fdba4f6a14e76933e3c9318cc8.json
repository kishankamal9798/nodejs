{"remainingRequest":"/home/agami/Desktop/Vuejs/images/node_modules/babel-loader/lib/index.js!/home/agami/Desktop/Vuejs/images/node_modules/ts-loader/index.js??ref--13-2!/home/agami/Desktop/Vuejs/images/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/agami/Desktop/Vuejs/images/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/agami/Desktop/Vuejs/images/src/components/imagesList/imagesList.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/agami/Desktop/Vuejs/images/src/components/imagesList/imagesList.vue","mtime":1599208736467},{"path":"/home/agami/Desktop/Vuejs/images/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/agami/Desktop/Vuejs/images/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/agami/Desktop/Vuejs/images/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/agami/Desktop/Vuejs/images/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/agami/Desktop/Vuejs/images/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9hZ2FtaS9EZXNrdG9wL1Z1ZWpzL2ltYWdlcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvYWdhbWkvRGVza3RvcC9WdWVqcy9pbWFnZXMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9hZ2FtaS9EZXNrdG9wL1Z1ZWpzL2ltYWdlcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9ob21lL2FnYW1pL0Rlc2t0b3AvVnVlanMvaW1hZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL2hvbWUvYWdhbWkvRGVza3RvcC9WdWVqcy9pbWFnZXMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKaW1wb3J0IHsgQ29tcG9uZW50LCBWdWUgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKaW1wb3J0IEF4aW9zIGZyb20gJ2F4aW9zJzsKCnZhciBJbWFnZXNMaXN0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKEltYWdlc0xpc3QsIF9WdWUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEltYWdlc0xpc3QpOwoKICBmdW5jdGlvbiBJbWFnZXNMaXN0KCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBJbWFnZXNMaXN0KTsKCiAgICBfdGhpcyA9IF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgX3RoaXMuQkFTRV9BUElfVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NDAwMC8nOwogICAgX3RoaXMuaW1hZ2VBcnIgPSBbXTsKICAgIF90aGlzLnZhbGlkYXRpb25Nc2cgPSBmYWxzZTsKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhJbWFnZXNMaXN0LCBbewogICAga2V5OiAidXBsb2FkRG9jIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfdXBsb2FkRG9jID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGV2ZW50KSB7CiAgICAgICAgdmFyIGZpbGVzLCBmb3JtRGF0YSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgZmlsZXMgPSBldmVudC50YXJnZXQuZmlsZXM7IC8vIGlmIChmaWxlcy5sZW5ndGggPCA0KSB7CiAgICAgICAgICAgICAgICAvLyAgIHJldHVybjsKICAgICAgICAgICAgICAgIC8vIH0KCiAgICAgICAgICAgICAgICB0aGlzLnZhbGlkYXRpb25Nc2cgPSBmYWxzZTsKICAgICAgICAgICAgICAgIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgICAgICAgICAgICBldmVudC50YXJnZXQuZmlsZXMuZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCBlbGVtZW50KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gQXhpb3MucG9zdCh0aGlzLkJBU0VfQVBJX1VSTCArICd1cGxvYWQvdXBsb2FkSW1hZ2VzJywgZm9ybURhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09IDUwMCkgewogICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgICB0aGlzLnZhbGlkYXRpb25Nc2cgPSB0cnVlOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzLCBbWzAsIDEyXV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiB1cGxvYWREb2MoX3gpIHsKICAgICAgICByZXR1cm4gX3VwbG9hZERvYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gdXBsb2FkRG9jOwogICAgfSgpCiAgfSwgewogICAga2V5OiAiZmV0Y2hJbWFnZUxpc3QiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9mZXRjaEltYWdlTGlzdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIEF4aW9zLnBvc3QodGhpcy5CQVNFX0FQSV9VUkwgKyAndXBsb2FkL2ZldGNoSW1hZ2VMaXN0Jywge30pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgICAgICAgICAgICB0aGlzLmltYWdlQXJyID0gcmVzLmRhdGEuaW1hZ2VzOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDg7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDIudDApOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzLCBbWzAsIDhdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGZldGNoSW1hZ2VMaXN0KCkgewogICAgICAgIHJldHVybiBfZmV0Y2hJbWFnZUxpc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZldGNoSW1hZ2VMaXN0OwogICAgfSgpCiAgfSwgewogICAga2V5OiAibG9hZEltYWdlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfbG9hZEltYWdlID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhwYXRoLCBpKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCBkb20sIGltZzsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIEF4aW9zLnBvc3QodGhpcy5CQVNFX0FQSV9VUkwgKyAndXBsb2FkL3Nob3dJbWFnZXMnLCB7CiAgICAgICAgICAgICAgICAgIHBhdGg6ICdodHRwczovL2tpc2hhbmRldmVsb3AuczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vJyArIHBhdGgKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgZG9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltYWdlRWwnICsgaSk7CiAgICAgICAgICAgICAgICBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTsKICAgICAgICAgICAgICAgIGltZy5zcmMgPSAnZGF0YTppbWFnZS8nICsgcGF0aC5zcGxpdCgnLicpLnBvcCgpICsgJztiYXNlNjQsJyArIHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICBpbWcuaWQgPSAnaW1nLWlkJyArIGk7CiAgICAgICAgICAgICAgICBpbWcud2lkdGggPSAxNTA7CiAgICAgICAgICAgICAgICBpbWcuaGVpZ2h0ID0gMTUwOwogICAgICAgICAgICAgICAgZG9tLmlubmVySFRNTCA9ICcnOwogICAgICAgICAgICAgICAgZG9tLmFwcGVuZENoaWxkKGltZyk7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDE3OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE0OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQzLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgdGhpcywgW1swLCAxNF1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gbG9hZEltYWdlKF94MiwgX3gzKSB7CiAgICAgICAgcmV0dXJuIF9sb2FkSW1hZ2UuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGxvYWRJbWFnZTsKICAgIH0oKQogIH0sIHsKICAgIGtleTogIm1vdW50ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAgIHRoaXMuZmV0Y2hJbWFnZUxpc3QoKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBJbWFnZXNMaXN0Owp9KFZ1ZSk7CgpJbWFnZXNMaXN0ID0gX19kZWNvcmF0ZShbQ29tcG9uZW50XSwgSW1hZ2VzTGlzdCk7CmV4cG9ydCBkZWZhdWx0IEltYWdlc0xpc3Q7"},{"version":3,"sources":["/home/agami/Desktop/Vuejs/images/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/agami/Desktop/Vuejs/images/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/agami/Desktop/Vuejs/images/src/components/imagesList/imagesList.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport Axios from 'axios';\n\n@Component\nexport default class ImagesList extends Vue {\n  public BASE_API_URL = 'http://localhost:4000/';\n  public imageArr: any = [];\n  public validationMsg = false;\n  public async uploadDoc(event: any) {\n    try {\n      var files = event.target.files;\n\n      // if (files.length < 4) {\n      //   return;\n      // }\n      this.validationMsg = false;\n      let formData = new FormData();\n      event.target.files.forEach((element: any) => {\n        formData.append('file', element);\n      });\n\n      let res = await Axios.post(\n        this.BASE_API_URL + 'upload/uploadImages',\n        formData\n      );\n      if (res.data.code == 500) {\n        event.preventDefault();\n        this.validationMsg = true;\n      }\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  public async fetchImageList() {\n    try {\n      let res = await Axios.post(\n        this.BASE_API_URL + 'upload/fetchImageList',\n        {}\n      );\n      console.log(res);\n      this.imageArr = res.data.images;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  public async loadImage(path:any, i:any) {\n    try {\n      let response = await Axios.post(this.BASE_API_URL + 'upload/showImages', {\n        path: 'https://kishandevelop.s3-us-west-2.amazonaws.com/' + path\n      });\n      let dom: any = document.getElementById('imageEl' + i);\n      let img = document.createElement('img');\n      img.src =\n        'data:image/' + path.split('.').pop() + ';base64,' + response.data;\n      img.id = 'img-id' + i;\n      img.width = 150;\n      img.height = 150;\n      dom.innerHTML = '';\n      dom.appendChild(img);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  public mounted() {\n    this.fetchImageList();\n  }\n}\n"],"sourceRoot":""}]}